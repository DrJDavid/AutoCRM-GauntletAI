[
  {
    "schema_map": {
      "schema_name": "public",
      "tables": [
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "email",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "token",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "expires_at",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "boolean",
              "column_name": "accepted",
              "is_nullable": "YES",
              "column_default": "false"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX agent_organization_invites_organization_id_email_key ON public.agent_organization_invites USING btree (organization_id, email)",
              "index_name": "agent_organization_invites_organization_id_email_key"
            },
            {
              "index_def": "CREATE UNIQUE INDEX agent_organization_invites_pkey ON public.agent_organization_invites USING btree (id)",
              "index_name": "agent_organization_invites_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "((auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.organization_id = agent_organization_invites.organization_id) AND (profiles.role = 'admin'::text)))) OR (email = auth.email()))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Agent invites viewable by organization admins"
            },
            {
              "cmd": "INSERT",
              "qual": null,
              "roles": [
                "public"
              ],
              "with_check": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.organization_id = profiles.organization_id) AND (profiles.role = 'admin'::text))))",
              "policy_name": "Agent invites creatable by organization admins"
            },
            {
              "cmd": "SELECT",
              "qual": "((email = auth.email()) OR (lower(email) = lower(COALESCE(((current_setting('request.jwt.claims'::text, true))::json ->> 'email'::text), ''::text))) OR (auth.role() = 'service_role'::text))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Allow reading own unaccepted invites"
            },
            {
              "cmd": "UPDATE",
              "qual": "((email = auth.email()) OR (lower(email) = lower(COALESCE(((current_setting('request.jwt.claims'::text, true))::json ->> 'email'::text), ''::text))) OR (auth.role() = 'service_role'::text))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Allow accepting own invites"
            }
          ],
          "table_name": "agent_organization_invites",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_31696_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31696_6_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31696_5_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31696_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31696_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "organization_id, organization_id, email, email",
                "foreign_table": "agent_organization_invites",
                "foreign_columns": "organization_id, email, organization_id, email"
              },
              "constraint_name": "agent_organization_invites_organization_id_email_key",
              "constraint_type": "UNIQUE"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "agent_organization_invites_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "agent_organization_invites",
                "foreign_columns": "id"
              },
              "constraint_name": "agent_organization_invites_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_31696_1_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "assigned_agent_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "agent_name",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "total_tickets",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "resolved_tickets",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "numeric",
              "column_name": "avg_resolution_time",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "YES",
              "column_default": null
            }
          ],
          "comment": null,
          "indexes": [],
          "policies": [],
          "table_name": "agent_performance",
          "table_type": "VIEW",
          "constraints": []
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "email",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "token",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "expires_at",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "boolean",
              "column_name": "accepted",
              "is_nullable": "YES",
              "column_default": "false"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX customer_organization_invites_pkey ON public.customer_organization_invites USING btree (id)",
              "index_name": "customer_organization_invites_pkey"
            },
            {
              "index_def": "CREATE UNIQUE INDEX customer_organization_invites_organization_id_email_key ON public.customer_organization_invites USING btree (organization_id, email)",
              "index_name": "customer_organization_invites_organization_id_email_key"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "((auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE (profiles.organization_id = customer_organization_invites.organization_id))) OR (email = auth.email()))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Invites viewable by organization members and invitee"
            },
            {
              "cmd": "INSERT",
              "qual": null,
              "roles": [
                "public"
              ],
              "with_check": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.organization_id = profiles.organization_id) AND (profiles.role = ANY (ARRAY['admin'::text, 'agent'::text])))))",
              "policy_name": "Invites creatable by organization members"
            },
            {
              "cmd": "UPDATE",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.organization_id = profiles.organization_id) AND (profiles.role = ANY (ARRAY['admin'::text, 'agent'::text])))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Invites updatable by organization members"
            }
          ],
          "table_name": "customer_organization_invites",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": {
                "columns": "id",
                "foreign_table": "customer_organization_invites",
                "foreign_columns": "id"
              },
              "constraint_name": "customer_organization_invites_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_5_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_6_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31388_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "organization_id, organization_id, email, email",
                "foreign_table": "customer_organization_invites",
                "foreign_columns": "organization_id, email, organization_id, email"
              },
              "constraint_name": "customer_organization_invites_organization_id_email_key",
              "constraint_type": "UNIQUE"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "customer_organization_invites_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "customer_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "text",
              "column_name": "status",
              "is_nullable": "NO",
              "column_default": "'active'::text"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX customer_organizations_customer_id_organization_id_key ON public.customer_organizations USING btree (customer_id, organization_id)",
              "index_name": "customer_organizations_customer_id_organization_id_key"
            },
            {
              "index_def": "CREATE UNIQUE INDEX customer_organizations_pkey ON public.customer_organizations USING btree (id)",
              "index_name": "customer_organizations_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "((auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE (profiles.organization_id = customer_organizations.organization_id))) OR (customer_id = auth.uid()))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Customer organizations viewable by members"
            }
          ],
          "table_name": "customer_organizations",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": {
                "columns": "customer_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "customer_organizations_customer_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "customer_id, customer_id, organization_id, organization_id",
                "foreign_table": "customer_organizations",
                "foreign_columns": "customer_id, organization_id, customer_id, organization_id"
              },
              "constraint_name": "customer_organizations_customer_id_organization_id_key",
              "constraint_type": "UNIQUE"
            },
            {
              "details": null,
              "constraint_name": "2200_31492_5_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31492_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "customer_organizations_status_check",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "customer_organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "customer_organizations_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "customer_organizations_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_31492_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31492_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31492_4_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "title",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "content",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "updated_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "uuid",
              "column_name": "author_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "status",
              "is_nullable": "NO",
              "column_default": "'draft'::text"
            },
            {
              "data_type": "ARRAY",
              "column_name": "tags",
              "is_nullable": "YES",
              "column_default": "ARRAY[]::text[]"
            },
            {
              "data_type": "jsonb",
              "column_name": "metadata",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE INDEX idx_knowledge_articles_tags ON public.knowledge_articles USING gin (tags)",
              "index_name": "idx_knowledge_articles_tags"
            },
            {
              "index_def": "CREATE UNIQUE INDEX knowledge_articles_pkey ON public.knowledge_articles USING btree (id)",
              "index_name": "knowledge_articles_pkey"
            },
            {
              "index_def": "CREATE INDEX idx_knowledge_articles_metadata ON public.knowledge_articles USING gin (metadata jsonb_path_ops)",
              "index_name": "idx_knowledge_articles_metadata"
            },
            {
              "index_def": "CREATE INDEX idx_knowledge_articles_org ON public.knowledge_articles USING btree (organization_id)",
              "index_name": "idx_knowledge_articles_org"
            }
          ],
          "policies": [
            {
              "cmd": "ALL",
              "qual": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.organization_id = knowledge_articles.organization_id) AND (profiles.id = auth.uid()) AND (profiles.role = ANY (ARRAY['admin'::text, 'agent'::text])))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Articles editable by admins and agents"
            },
            {
              "cmd": "SELECT",
              "qual": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.organization_id = knowledge_articles.organization_id) AND (profiles.id = auth.uid()))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Articles viewable by organization members"
            }
          ],
          "table_name": "knowledge_articles",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_29788_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "author_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "knowledge_articles_author_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "knowledge_articles_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "knowledge_articles",
                "foreign_columns": "id"
              },
              "constraint_name": "knowledge_articles_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": null,
              "constraint_name": "knowledge_articles_status_check",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_8_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_6_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29788_5_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "uuid_generate_v4()"
            },
            {
              "data_type": "uuid",
              "column_name": "user_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "role",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "YES",
              "column_default": "now()"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "updated_at",
              "is_nullable": "YES",
              "column_default": "now()"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX organization_members_user_id_organization_id_key ON public.organization_members USING btree (user_id, organization_id)",
              "index_name": "organization_members_user_id_organization_id_key"
            },
            {
              "index_def": "CREATE UNIQUE INDEX organization_members_pkey ON public.organization_members USING btree (id)",
              "index_name": "organization_members_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "ALL",
              "qual": "(organization_id IN ( SELECT organization_members_1.organization_id\n   FROM organization_members organization_members_1\n  WHERE ((organization_members_1.user_id = auth.uid()) AND (organization_members_1.role = 'admin'::text))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Organization admins can manage members"
            },
            {
              "cmd": "SELECT",
              "qual": "(user_id = auth.uid())",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Users can read their own membership"
            },
            {
              "cmd": "ALL",
              "qual": "(auth.role() = 'service_role'::text)",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Service role can manage all records"
            }
          ],
          "table_name": "organization_members",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": {
                "columns": "user_id",
                "foreign_table": null,
                "foreign_columns": null
              },
              "constraint_name": "organization_members_user_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "user_id, user_id, organization_id, organization_id",
                "foreign_table": "organization_members",
                "foreign_columns": "user_id, organization_id, user_id, organization_id"
              },
              "constraint_name": "organization_members_user_id_organization_id_key",
              "constraint_type": "UNIQUE"
            },
            {
              "details": null,
              "constraint_name": "2200_31982_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31982_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31982_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_31982_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "organization_members_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "organization_members",
                "foreign_columns": "id"
              },
              "constraint_name": "organization_members_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": null,
              "constraint_name": "organization_members_role_check",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "text",
              "column_name": "name",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "slug",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "jsonb",
              "column_name": "settings",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX organizations_pkey ON public.organizations USING btree (id)",
              "index_name": "organizations_pkey"
            },
            {
              "index_def": "CREATE UNIQUE INDEX organizations_slug_key ON public.organizations USING btree (slug)",
              "index_name": "organizations_slug_key"
            }
          ],
          "policies": [
            {
              "cmd": "ALL",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.role = 'admin'::text) AND (profiles.organization_id = organizations.id))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Admins can perform all actions on organizations"
            },
            {
              "cmd": "ALL",
              "qual": "true",
              "roles": [
                "public"
              ],
              "with_check": "true",
              "policy_name": "Enable all operations for organizations"
            }
          ],
          "table_name": "organizations",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_29557_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29557_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29557_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "organizations_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "slug",
                "foreign_table": "organizations",
                "foreign_columns": "slug"
              },
              "constraint_name": "organizations_slug_key",
              "constraint_type": "UNIQUE"
            },
            {
              "details": null,
              "constraint_name": "2200_29557_1_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "text",
              "column_name": "email",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "role",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "full_name",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "avatar_url",
              "is_nullable": "YES",
              "column_default": null
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id)",
              "index_name": "profiles_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "ALL",
              "qual": "true",
              "roles": [
                "public"
              ],
              "with_check": "true",
              "policy_name": "Enable all operations for profiles"
            }
          ],
          "table_name": "profiles",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_29569_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29569_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29569_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "profiles_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": null,
                "foreign_columns": null
              },
              "constraint_name": "profiles_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "profiles_role_check",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "profiles_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_29569_1_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "team_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "profile_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "role",
              "is_nullable": "NO",
              "column_default": "'member'::text"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE INDEX idx_team_members_profile ON public.team_members USING btree (profile_id)",
              "index_name": "idx_team_members_profile"
            },
            {
              "index_def": "CREATE UNIQUE INDEX team_members_pkey ON public.team_members USING btree (team_id, profile_id)",
              "index_name": "team_members_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "(EXISTS ( SELECT 1\n   FROM (teams t\n     JOIN profiles p ON ((t.organization_id = p.organization_id)))\n  WHERE ((t.id = team_members.team_id) AND (p.id = auth.uid()))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Team members viewable by organization members"
            }
          ],
          "table_name": "team_members",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": {
                "columns": "team_id",
                "foreign_table": "teams",
                "foreign_columns": "id"
              },
              "constraint_name": "team_members_team_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "team_id, team_id, profile_id, profile_id",
                "foreign_table": "team_members",
                "foreign_columns": "team_id, profile_id, team_id, profile_id"
              },
              "constraint_name": "team_members_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "profile_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "team_members_profile_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "team_members_role_check",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29849_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29849_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29849_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29849_4_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "team_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "team_name",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "team_size",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "total_tickets",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "resolved_tickets",
              "is_nullable": "YES",
              "column_default": null
            }
          ],
          "comment": null,
          "indexes": [],
          "policies": [],
          "table_name": "team_performance",
          "table_type": "VIEW",
          "constraints": []
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "name",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "description",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "jsonb",
              "column_name": "metadata",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id)",
              "index_name": "teams_pkey"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "(EXISTS ( SELECT 1\n   FROM profiles\n  WHERE ((profiles.organization_id = teams.organization_id) AND (profiles.id = auth.uid()))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Teams viewable by organization members"
            }
          ],
          "table_name": "teams",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_29834_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29834_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29834_5_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "teams",
                "foreign_columns": "id"
              },
              "constraint_name": "teams_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "teams_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_29834_1_not_null",
              "constraint_type": "CHECK"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "uuid",
              "column_name": "ticket_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "text",
              "column_name": "content",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "author_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "boolean",
              "column_name": "is_internal",
              "is_nullable": "YES",
              "column_default": "false"
            },
            {
              "data_type": "jsonb",
              "column_name": "metadata",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE UNIQUE INDEX ticket_messages_pkey ON public.ticket_messages USING btree (id)",
              "index_name": "ticket_messages_pkey"
            },
            {
              "index_def": "CREATE INDEX idx_ticket_messages_ticket ON public.ticket_messages USING btree (ticket_id)",
              "index_name": "idx_ticket_messages_ticket"
            }
          ],
          "policies": [
            {
              "cmd": "SELECT",
              "qual": "(EXISTS ( SELECT 1\n   FROM (tickets t\n     JOIN profiles p ON ((t.organization_id = p.organization_id)))\n  WHERE ((t.id = ticket_messages.ticket_id) AND ((p.id = auth.uid()) OR (t.customer_id = auth.uid())))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Messages viewable by organization members and ticket owner"
            }
          ],
          "table_name": "ticket_messages",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": {
                "columns": "id",
                "foreign_table": "ticket_messages",
                "foreign_columns": "id"
              },
              "constraint_name": "ticket_messages_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "author_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "ticket_messages_author_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_29724_2_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29724_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29724_5_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29724_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29724_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "ticket_id",
                "foreign_table": "tickets",
                "foreign_columns": "id"
              },
              "constraint_name": "ticket_messages_ticket_id_fkey",
              "constraint_type": "FOREIGN KEY"
            }
          ]
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "status",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "priority",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "bigint",
              "column_name": "ticket_count",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "numeric",
              "column_name": "avg_resolution_time",
              "is_nullable": "YES",
              "column_default": null
            }
          ],
          "comment": null,
          "indexes": [],
          "policies": [],
          "table_name": "ticket_stats",
          "table_type": "VIEW",
          "constraints": []
        },
        {
          "columns": [
            {
              "data_type": "uuid",
              "column_name": "id",
              "is_nullable": "NO",
              "column_default": "gen_random_uuid()"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "created_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "timestamp with time zone",
              "column_name": "updated_at",
              "is_nullable": "NO",
              "column_default": "timezone('utc'::text, now())"
            },
            {
              "data_type": "text",
              "column_name": "title",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "description",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "text",
              "column_name": "status",
              "is_nullable": "NO",
              "column_default": "'open'::text"
            },
            {
              "data_type": "text",
              "column_name": "priority",
              "is_nullable": "NO",
              "column_default": "'medium'::text"
            },
            {
              "data_type": "uuid",
              "column_name": "customer_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "assigned_agent_id",
              "is_nullable": "YES",
              "column_default": null
            },
            {
              "data_type": "uuid",
              "column_name": "organization_id",
              "is_nullable": "NO",
              "column_default": null
            },
            {
              "data_type": "ARRAY",
              "column_name": "tags",
              "is_nullable": "YES",
              "column_default": "ARRAY[]::text[]"
            },
            {
              "data_type": "jsonb",
              "column_name": "metadata",
              "is_nullable": "YES",
              "column_default": "'{}'::jsonb"
            }
          ],
          "comment": null,
          "indexes": [
            {
              "index_def": "CREATE INDEX idx_tickets_org_priority ON public.tickets USING btree (organization_id, priority)",
              "index_name": "idx_tickets_org_priority"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_org_status ON public.tickets USING btree (organization_id, status)",
              "index_name": "idx_tickets_org_status"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_agent ON public.tickets USING btree (assigned_agent_id)",
              "index_name": "idx_tickets_agent"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_customer ON public.tickets USING btree (customer_id)",
              "index_name": "idx_tickets_customer"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_tags ON public.tickets USING gin (tags)",
              "index_name": "idx_tickets_tags"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_metadata ON public.tickets USING gin (metadata jsonb_path_ops)",
              "index_name": "idx_tickets_metadata"
            },
            {
              "index_def": "CREATE UNIQUE INDEX tickets_pkey ON public.tickets USING btree (id)",
              "index_name": "tickets_pkey"
            },
            {
              "index_def": "CREATE INDEX idx_tickets_created_at ON public.tickets USING btree (created_at DESC)",
              "index_name": "idx_tickets_created_at"
            }
          ],
          "policies": [
            {
              "cmd": "DELETE",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.role = 'admin'::text) AND (profiles.organization_id = tickets.organization_id))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Only admins can delete tickets"
            },
            {
              "cmd": "INSERT",
              "qual": null,
              "roles": [
                "public"
              ],
              "with_check": "(auth.uid() = customer_id)",
              "policy_name": "Tickets can be created by authenticated users"
            },
            {
              "cmd": "UPDATE",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE (profiles.organization_id = tickets.organization_id)))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Tickets can be updated by organization members"
            },
            {
              "cmd": "SELECT",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.role = 'agent'::text) AND (profiles.organization_id = tickets.organization_id))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Agents can view and update assigned tickets"
            },
            {
              "cmd": "UPDATE",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.role = 'agent'::text) AND (profiles.organization_id = tickets.organization_id))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Agents can update assigned tickets"
            },
            {
              "cmd": "ALL",
              "qual": "(auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE ((profiles.role = 'admin'::text) AND (profiles.organization_id = tickets.organization_id))))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Admins can perform all actions on tickets"
            },
            {
              "cmd": "SELECT",
              "qual": "((auth.uid() IN ( SELECT profiles.id\n   FROM profiles\n  WHERE (profiles.organization_id = tickets.organization_id))) OR (auth.uid() = customer_id))",
              "roles": [
                "public"
              ],
              "with_check": null,
              "policy_name": "Tickets are viewable by organization members and ticket owner"
            }
          ],
          "table_name": "tickets",
          "table_type": "BASE TABLE",
          "constraints": [
            {
              "details": null,
              "constraint_name": "2200_29588_1_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "tickets_status_check",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "tickets_priority_check",
              "constraint_type": "CHECK"
            },
            {
              "details": {
                "columns": "id",
                "foreign_table": "tickets",
                "foreign_columns": "id"
              },
              "constraint_name": "tickets_pkey",
              "constraint_type": "PRIMARY KEY"
            },
            {
              "details": {
                "columns": "organization_id",
                "foreign_table": "organizations",
                "foreign_columns": "id"
              },
              "constraint_name": "tickets_organization_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "assigned_agent_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "tickets_assigned_agent_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": {
                "columns": "customer_id",
                "foreign_table": "profiles",
                "foreign_columns": "id"
              },
              "constraint_name": "tickets_customer_id_fkey",
              "constraint_type": "FOREIGN KEY"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_10_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_8_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_7_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_6_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_4_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_3_not_null",
              "constraint_type": "CHECK"
            },
            {
              "details": null,
              "constraint_name": "2200_29588_2_not_null",
              "constraint_type": "CHECK"
            }
          ]
        }
      ]
    }
  }
]